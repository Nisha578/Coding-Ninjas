/*
	Following is the structure of the node class for a Singly Linked List

	class Node {
		int data;
		Node next;

		public Node(int data) {
			this.data = data;
			this.next = null;
		}

	}

*/

public class Queue {

       private Node front;
       private Node rear;
       private int size;
       
       public Queue() { 
       
            front = null;
            rear = null;
            size = 0;
       }
       
       public int getSize() {
             return size;
       }
       
       public boolean isEmpty() {
       
              return size == 0;
       }
       
       public void enqueue(int data) {
              
              Node newNode = new Node(data);
              if(rear == null) {
                     front = newNode;
                     rear = newNode;
              }
              else {
                    rear.next = newNode;
                    rear = newNode;
              }
              
              size++;
       }
       
       public int dequeue() {
            
            if(rear == null) { 
                 return -1;
            }
            int temp = front.data;
            front = front.next;
            if(size == 1) {
                rear = null;
            }
            size--;
              
            return temp;  
            
       }
       
       public int front() {
         
            if(size == 0) {
               return -1;
            }
            return front.data;
       }

}
