import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

public class Solution {

       public static Queue<Integer> reverseKElements(Queue<Integer> input,int k) {
                
              if(input.isEmpty() == true || k > input.size())
                  return input;
              if(k <= 0) {
                    return input;
              }
              Stack<Integer> s = new Stack<>();
              for(int i = 0; i<k; i++) {
                   s.push(input.peek());
                   input.remove();
              }
              while(!s.isEmpty()) { 
                    input.add(s.peek());
                    s.pop();
              }
              for(int i = 0; i<input.size() - k; i++) { 
                        input.add(input.peek());
                        input.remove();
              }
              return input;
                
       }

}
