/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
 
 public class Solution {  
 
        static void pairSum(BinaryTreeNode<Integer> root,int sum) {
               ArrayList<Integer> output = new ArrayList<Integer>();
               inOrder(root,ouput);
               Collections.sort(output);
               int i = 0, j = output.size()-1;
               
               while(i<j) {
                     if(output.get(i) + output.get(j) < sum) {
                         i++;
                     }
                     else if(output.get(i) + output(j) > sum) {
                         j--;
                     }
                     else{
                          System.out.println(output.get(i)+" "+output.get(j));
                          i++;
                          j--;
                     }
               }
        }
        static void inOrder(BinaryTreeNode<Integer> root, ArrayList<Integer> arr) {
              if(root == null) { 
                   return;
              }
              inOrder(root.left,arr);
              arr.add(root.data);
              inOrder(root.right,arr);
        }
 
 }
