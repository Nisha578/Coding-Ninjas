/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
 
 public class Solution {
 
        public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr,int n) {
          return SortedArrayToBST(root,0,n-1);
        }
       public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr,int si,int ei) {
        if(si > ei) {
            return null;
        }
        int mid = si + (ei - si)/2;
        BinaryTreeNode<Integer> root = new BinaryTreeNode<Integer>(arr[mid]);
        root.left = SortedArrayToBST(arr,si,mid-1);
        root.right = SortedArrayToBST(arr,mid+1,ei);
        return root;
      }
 
 }
