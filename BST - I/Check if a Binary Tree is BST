/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
 
 import java.lang.Long;
 
 public class Solution {
        
        public static boolean isBST(BinaryTreeNode<Integer> root) {
                    return isBST(root,Long.MIN_VALUE,Long.MAX_VALUE);
        }
        public static boolean isBST(BinaryTreeNode<Integer> root,int minval,int maxval) {
               if(root == null) {
                    return true;
               }
               else if(root.data <= minval && root.data >= maxval) {
                         return false;
               } 
               return isBST(root.left,minval,root.data) && isBST(root.right,root.data,maxval);
        }
        
 }
