/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/

public class solution {
       public static LinkedListNode<Integer> swapNodes(LinkedListNode<Integer> head,int i,int j) {
              
              if(i == j) {
                 return head;
              }
              
              LinkedListNode<Integer> currentNode = head, prev = null;
              LinkedListNode<Integer> firstNode = null, secondNode = null, firstNodeprev = null, secondNodeprev = null;
              int pos = 0;
              while(currentNode != null) {
                   if(pos == i) {
                      firstNode = currentNode, firstNodeprev = prev;
                   }
                   else if(pos == j) {
                      secondNode = currentNode, currentNodeprev = prev;
                   }
                   prev = currentNode;
                   currentNode = currentNode.next;
                   pos += 1;
              }
              if(firstNodeprev != null) {
               firstNodeprev.next = secondNode;
              }
              else {
                head = secondNode;
              }
              if(secondNodeprev != null) { 
                 secondNodeprev.next = firstNode;
              }
              else {
                  head = firstNode;
              }
              LinkedListNode<Integer> currentfirstNode = secondNode.next;
              secondNode.next = firstNode.next;
              firstNode.next = currentfirstNode;
              
              return head;
          
       }
}
