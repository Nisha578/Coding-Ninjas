/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

*/

public class Solution {

       public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root,int k) {
                   find(root,k,"");
       }
       public static void find(BinaryTreeNode<Integer> root,int sum,int str) {
               if(root == null){
                  return;
               }
               if(root.left == null && root.right == null) {
                      if(sum == root.data) {
                            str = str+root.data;
                            System.out.println(str);
                      } else {
                         return;
                       }  
               }
               sum = sum - root.data;
               str = str + root.data+" ";
               find(root.left,sum,str);
               find(root.right,sum,str);
               return;
       }

}
