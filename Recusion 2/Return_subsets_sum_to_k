public class solution {
   public static int[][] subsetsSumK(int input[], int k) {
       return subsetsSumK(input,0,k);
  }
  public static int[][] subsetsSumK(int input[], int startIndex, int k) {
       if(startIndex == input.length) {
          if(k == 0) {
              return new int[1][0];
          } else {
              return new int[0][0];
          }
       }
       int output1[][] = subsetsSumK(input,startIndex + 1, k);
       int output2[][] = subsetsSumK(input,startIndex + 1, k - input[startIndex]);
       int finalOutput[][] = new int[output1.length + output2.length][];
       int index = 0;
       for(int i = 0; i < output1.length; i++) {
               finalOutput[index++] = output1[i];
       }
       for(int i = 0; i < output2.length; i++) {
                finalOutput[index] = new int[output2[i].length + 1];
                finalOutput[index][0] = input[startIndex];
                for(int j =0; j<output2[i].length; j++){
                        finalOutput[index][j + 1] = output2[i][j];
                }
                index++;
        }
        return finalOutput;
  }
}
                    
